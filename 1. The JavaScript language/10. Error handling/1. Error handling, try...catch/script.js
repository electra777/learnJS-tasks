'use strict';

try {
	// начать работу
	// работать
} catch (e) {
	// обработать ошибку
} finally {
	// очистить рабочее пространство
}

// преимущество finally, что оно выполнится в любом случае,
// даже если будет return

// function f() {
//   try {
//     alert('начало');
//     return "result";
//   } catch (e) {
//     /// ...
//   } finally {
//     alert('очистка!');
//   }
// }

// f(); // очистка!

// function f() {
//   try {
//     alert('начало');
//     throw new Error("ошибка");
//   } catch (e) {
//     // ...
//     if("не могу обработать ошибку") {
//       throw e;
//     }

//   } finally {
//     alert('очистка!')
//   }
// }

// f(); // очистка!
